package com.CS5500.springbootinfrastructure.controller;

import com.CS5500.springbootinfrastructure.dao.Activity;
import com.CS5500.springbootinfrastructure.dao.DateLog;
import com.CS5500.springbootinfrastructure.dao.Move;
import com.CS5500.springbootinfrastructure.repos.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.sql.Date;
import java.util.List;
import java.util.Map;

@Controller // This means that this class is a Controller
@RequestMapping(path="/activitydb") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private DateLogRepository dateLogRepository;
    private ActivityRepository activityRepository;
    private MoveRepository moveRepository;
    private PlaceRepository placeRepository;
    private TypeRepository typeRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody
    String addNewDateLog (@RequestParam Date dateOf
            , @RequestParam Integer caloriesIdle) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        DateLog n = new DateLog();
        n.setDate(dateOf);
        n.setCaloriesIdle(caloriesIdle);
        n.timestampLastUpdate();
        dateLogRepository.save(n);
        return "Saved";
    }
    @GetMapping(path = "/dateLog")
    public @ResponseBody
    List<DateLog> getAllDates() {
        // This returns a JSON or XML with the users
        return dateLogRepository.getJSONDates();
    }
    @GetMapping(path = "/getActivity")
    public @ResponseBody
    Iterable<Map<String, Object>> getAllActivity() {
        return dateLogRepository.getJSONActivities();
    }
    @GetMapping(path = "/getMove")
    public @ResponseBody
    Iterable<Map<String, Object>> getAllMove() {
        return dateLogRepository.getJSONMoves();
    }

    @GetMapping(path = "/getType")
    public @ResponseBody
    Iterable<Map<String, Object>> getAllType() {
        return dateLogRepository.getJSONTypes();
    }

    @GetMapping(path = "/getPlace")
    public @ResponseBody
    Iterable<Map<String, Object>> getAllPlace() {
        return dateLogRepository.getJSONPlaces();
    }
}
